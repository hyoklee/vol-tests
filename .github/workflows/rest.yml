name: Test HDF5 REST VOL

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout vol-tests
      uses: actions/checkout@v2
    - name: Checkout HDF5
      uses: actions/checkout@v2
      with:
        repository: HDFGroup/hdf5
        path: hdf5
    - name: Checkout REST VOL
      uses: actions/checkout@v2
      with:
        repository: HDFGroup/vol-rest
        ref: hdf5_1_12_update
        path: vol-rest
    - name: Install dependencies
      run: |
        sudo apt-get install ninja-build automake autoconf libtool libtool-bin libopenmpi-dev
        sudo apt-get update -y	
        sudo apt-get install -y libyajl-dev libcurl4-openssl-dev

    - name: Install HDF5
      run: |
        mkdir hdf5/build
        cd hdf5/build
        cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DHDF5_ENABLE_PARALLEL:BOOL=ON -DHDF5_ENABLE_THREADSAFE:BOOL=ON -DALLOW_UNSUPPORTED:BOOL=ON ..        
        sudo make -j2 install
        cd ..
        git rev-parse HEAD > git.txt
    - name: Install REST VOL
      env:
        CXX: mpic++
        CC: mpicc
      run: |
        mkdir vol-log-based/build
        cd vol-log-based/build
        autoreconf -i
	./configure --prefix=/usr/local --with-hdf5=/usr/local --enable-shared --enable-zlib
        make -j2
        make check
        make install
    - name: Test performance
      env:
        HDF5_PLUGIN_PATH: /usr/local/lib
        HDF5_VOL_CONNECTOR: LOG under_vol=0;under_info={}
      run: |
        mkdir build
        cd build
        cmake .. -DHDF5_DIR=/usr/local -DHDF5_VOL_TEST_ENABLE_PARALLEL:BOOL=ON -DHDF5_VOL_TEST_ENABLE_ASYNC:BOOL=ON -DHDF5_VOL_TEST_ENABLE_PART:BOOL=ON
        make
        ctest
        pwd
        ls
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: git.txt
        path: ${{ runner.workspace }}/vol-tests/hdf5/git.txt
